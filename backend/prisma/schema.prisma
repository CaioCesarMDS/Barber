generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id       String   @id @unique @default(uuid())
  name     String
  birth    DateTime
  phone    String   @unique
  email    String   @unique
  password String

  clientSubscribeBarbershop ClientSubscribeBarbershop[]
  Scheduling                Scheduling[]
}

model ClientSubscribeBarbershop {
  Client       Client     @relation(fields: [clientId], references: [id])
  clientId     String
  Barbershop   Barbershop @relation(fields: [barbershopId], references: [id])
  barbershopId String
  subscribeIn  DateTime @default(now())

  @@id([clientId, barbershopId])
}

model Barbershop {
  id        String @id @unique @default(uuid())
  name      String
  address   String
  imageUrl  String
  timeOpen  String
  timeClose String

  clientSubscribeBarbershop ClientSubscribeBarbershop[]
  services                  Services[]
  User                      Employee[]
}

model Employee {
  id           String   @id @unique @default(uuid())
  name         String
  birth        DateTime
  phone        String   @unique
  email        String   @unique
  password     String
  role         Role     @default(EMPLOYEE)
  barbershopId String

  Barbershop Barbershop   @relation(fields: [barbershopId], references: [id])
  Scheduling Scheduling[]
}

model Services {
  id           String  @id @unique @default(uuid())
  name         String
  description  String
  price        Decimal @db.Money
  barbershopId String

  schedules  ServicesOnScheduling[]
  barbershop Barbershop             @relation(fields: [barbershopId], references: [id])
}

model ServicesOnScheduling {
  service      Services   @relation(fields: [serviceId], references: [id])
  serviceId    String
  scheduling   Scheduling @relation(fields: [schedulingId], references: [id])
  schedulingId String
  priceTotal   Decimal    @db.Money

  @@id([serviceId, schedulingId])
}

model Scheduling {
  id           String                 @id @unique @default(uuid())
  barbershopId String                 @unique
  clientId     String                 @unique
  employeeId   String                 @unique
  dateTime     DateTime
  services     ServicesOnScheduling[]

  client   Client   @relation(fields: [clientId], references: [id])
  employee Employee @relation(fields: [employeeId], references: [id])
}

enum Role {
  ADMIN
  EMPLOYEE
}
