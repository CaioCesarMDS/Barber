generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @unique @default(uuid())
  name         String
  birth        DateTime?
  phone        String    @unique
  email        String    @unique
  password     String
  role         Role      @default(CLIENT)
  barbershopId String

  barbershop          Barbershop            @relation(fields: [barbershopId], references: [id])
  scheduling_barber   SchedulingService[]   @relation("barber")
  scheduling_client   SchedulingService[]   @relation("client")
  noScheduling_barber NoSchedulingService[] @relation("barber")
  noScheduling_client NoSchedulingService[] @relation("client")
}

model Barbershop {
  id                    String                @id @unique @default(uuid())
  name                  String
  timeOpen              String
  timeClose             String
  addressId             String                @unique
  imageUrl              String
  address               AddressBarbershop     @relation(fields: [addressId], references: [id], onDelete: Cascade)
  services              BarberServices[]
  schedulingsServices   SchedulingService[]
  noSchedulingsServices NoSchedulingService[]

  user User[]
}

model AddressBarbershop {
  id           String      @id @unique @default(uuid())
  number       String
  street       String
  complement   String
  neighborhood String
  city         String
  state        String
  country      String
  zipCode      String
  barbershop   Barbershop?
}

model BarberServices {
  id                 String                @id @unique @default(uuid())
  name               String
  description        String
  price              Decimal               @db.Money
  barbershopId       String
  schedulesService   SchedulingService[]
  noSchedulesService NoSchedulingService[]
  barbershop         Barbershop            @relation(fields: [barbershopId], references: [id])
}

model SchedulingService {
  id           Int              @id @unique @default(autoincrement())
  barbershopId String           @unique
  clientId     String           @unique
  barberId     String           @unique
  services     BarberServices[]
  dateHour     DateTime
  priceTotal   Decimal          @db.Money
  barber       User             @relation("barber", fields: [barberId], references: [id])
  client       User             @relation("client", fields: [clientId], references: [id])
  barbershop   Barbershop       @relation(fields: [barbershopId], references: [id])
}

model NoSchedulingService {
  id           Int              @id @unique @default(autoincrement())
  barbershopId String           @unique
  clientId     String           @unique
  barberId     String           @unique
  services     BarberServices[]
  date         DateTime
  priceTotal   Decimal          @db.Money

  barber     User       @relation("barber", fields: [barberId], references: [id])
  client     User       @relation("client", fields: [clientId], references: [id])
  barbershop Barbershop @relation(fields: [barbershopId], references: [id])
}

enum Role {
  ADMIN
  BARBER
  CLIENT
}
